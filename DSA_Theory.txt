DSA Theory:

Algorithm: A set of step-by-step instructions to solve a specific problem.

Data Structure: A way of organizing data so it can be used efficiently.

Time Complexity: A measure of the amount of time an algorithm takes to run, depending on the amount of data the algorithm is working on.

Space Complexity: A measure of the amount of memory an algorithm uses, depending on the amount of data the algorithm is working on.

Big O Notation: 

Recursion: A programmin technique where a function calls itself.

Divide and Conqure: 

BruteForce: In Data Structures and Algorithms (DSA), the brute force approach is a straightforward method for solving problems by systematically trying all possible solutions until the correct one is found

Dynamic programming: is a powerful algorithmic technique used to solve optimization problems by breaking them down into smaller, overlapping subproblems and storing their solutions to avoid redundant calculations.

Greedy: A greedy approach in algorithm design involves making locally optimal choices at each step with the hope of finding a globally optimal solution. It's a simple, often efficient method, but it's not guaranteed to produce the best overall result in every case. 